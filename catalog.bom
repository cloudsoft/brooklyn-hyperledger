brooklyn.catalog:
  version: 0.1.0_SNAPSHOT

  items:
  - id: docker-engine
    description: The engine for running Docker containers
    itemType: entity
    item:

      name: Docker Engine (host)
      type: org.apache.brooklyn.entity.software.base.VanillaSoftwareProcess

      install.command: |
        sudo yum -y update
        sudo tee /etc/yum.repos.d/docker.repo <<-'EOF'
        [dockerrepo]
        name=Docker Repository
        baseurl=https://yum.dockerproject.org/repo/main/centos/$releasever/
        enabled=1
        gpgcheck=1
        gpgkey=https://yum.dockerproject.org/gpg
        EOF
        sudo yum -y install docker-engine

      post.install.command: |
        # Configure Docker
        sudo mkdir /etc/systemd/system/docker.service.d
        echo "[Service]" | sudo tee --append /etc/systemd/system/docker.service.d/docker.conf > /dev/null
        echo "ExecStart=" | sudo tee --append /etc/systemd/system/docker.service.d/docker.conf > /dev/null
        echo 'ExecStart=/usr/bin/docker daemon -D --api-cors-header="*" -H tcp://0.0.0.0:4243 -H unix:///var/run/docker.sock' | sudo tee --append /etc/systemd/system/docker.service.d/docker.conf > /dev/null
        sudo systemctl daemon-reload

      launch.command: |
        sudo service docker start

      stop.command: |
        sudo service docker stop

      checkRunning.command: |
        sudo service docker status

      provisioning.properties:
        osFamily: centos
        minRam: 4gb
        installDevUrandom: true

      childStartMode: foreground_late

  - id: hyperledger-validating-peer-node
    description: A Hyperledger Fabric validating peer node
    itemType: entity
    item:

      type: org.apache.brooklyn.entity.software.base.VanillaSoftwareProcess
      name: Validating Peer Node

      shell.env:
        IS_ROOT_NODE: $brooklyn:config("is.root.node")

        HYPERLEDGER_PEER_ID: $brooklyn:config("hyperledger.peer.id")
        HYPERLEDGER_CLUSTER_SIZE: $brooklyn:config("hyperledger.cluster.size")
        HYPERLEDGER_ROOT_NODE_ADDRESS: $brooklyn:config("hyperledger.root.node.address")

        HOST_ADDRESS: $brooklyn:attributeWhenReady("host.address")

      launch.command:  |
        echo $HOST_ADDRESS > host-address

        sudo docker pull mikezaccardo/hyperledger:latest
        sudo docker tag mikezaccardo/hyperledger:latest hyperledger/fabric-baseimage:latest
        sudo docker pull mikezaccardo/hyperledger-peer:latest
        sudo docker pull mikezaccardo/hyperledger-peer:noops
        sudo docker pull mikezaccardo/hyperledger-peer:pbft

        if [ $IS_ROOT_NODE == "true" ]
        then
            nohup sudo docker run --name=$HYPERLEDGER_PEER_ID \
                --restart=unless-stopped \
                -i \
                -p 5000:5000 \
                -p 30303:30303 \
                -p 30304:30304 \
                -p 31315:31315 \
                -e CORE_VM_ENDPOINT=http://$HOST_ADDRESS:4243 \
                -e CORE_PEER_ID=$HYPERLEDGER_PEER_ID \
                -e CORE_PEER_ADDRESS=$HOST_ADDRESS:30303 \
                -e CORE_PEER_ADDRESSAUTODETECT=false \
                -e CORE_PEER_NETWORKID=dev \
                -e CORE_LOGGING_LEVEL=debug \
                -e CORE_PEER_VALIDATOR_CONSENSUS_PLUGIN=noops \
                -e CORE_NOOPS_BLOCK_TIMEOUT=10s \
                mikezaccardo/hyperledger-peer:noops peer node start > ~/$HYPERLEDGER_PEER_ID.log 2>&1&
        else
            nohup sudo docker run --name=$HYPERLEDGER_PEER_ID \
                --restart=unless-stopped \
                -i \
                -p 5000:5000 \
                -p 30303:30303 \
                -p 30304:30304 \
                -p 31315:31315 \
                -e CORE_VM_ENDPOINT=http://$HOST_ADDRESS:4243 \
                -e CORE_PEER_ID=$HYPERLEDGER_PEER_ID \
                -e CORE_PEER_DISCOVERY_ROOTNODE=$HYPERLEDGER_ROOT_NODE_ADDRESS:30303 \
                -e CORE_PEER_ADDRESS=$HOST_ADDRESS:30303 \
                -e CORE_PEER_ADDRESSAUTODETECT=false \
                -e CORE_PEER_NETWORKID=dev \
                -e CORE_LOGGING_LEVEL=debug \
                -e CORE_PEER_VALIDATOR_CONSENSUS_PLUGIN=noops \
                -e CORE_NOOPS_BLOCK_TIMEOUT=10s \
                mikezaccardo/hyperledger-peer:noops peer node start > ~/$HYPERLEDGER_PEER_ID.log 2>&1&
        fi

      checkRunning.command: |
        # TODO actually query peer's status using `peer status` in container
        sudo docker inspect -f {{.State.Running}} $HYPERLEDGER_PEER_ID

      brooklyn.initializers:
      - type: org.apache.brooklyn.core.effector.ssh.SshCommandEffector
        brooklyn.config:
          name: Deploy Chaincode
          description: Deploys an example chaincode

          command: |
            timestamp=$(date +%s)
            rest_endpoint=http://$(cat host-address):5000/chaincode

            curl -so body-${timestamp}.json https://raw.githubusercontent.com/cloudsoft/brooklyn-hyperledger/master/chaincode-request-templates/deploy-template.json
            sed -i "s|CHAINCODE|${chaincode}|g" body-${timestamp}.json
            sed -i "s/FUNCTION/${function}/g" body-${timestamp}.json
            sed -i "s/ARGUMENTS/${args}/g" body-${timestamp}.json
            sed -i "s/TRANSACTION_ID/${timestamp}/g" body-${timestamp}.json

            curl -H "Content-Type: application/json" -X POST -d @body-${timestamp}.json ${rest_endpoint}

          parameters:
            chaincode:
              description: "The chaincode to be deployed"

            function:
              description: "The function to run"
              defaultValue: "init"

            args:
              description: "Arguments for the function"

      - type: org.apache.brooklyn.core.effector.ssh.SshCommandEffector
        brooklyn.config:
          name: Invoke Chaincode
          description: Invokes an example chaincode

          command: |
            timestamp=$(date +%s)
            rest_endpoint=http://$(cat host-address):5000/chaincode

            curl -so body-${timestamp}.json https://raw.githubusercontent.com/cloudsoft/brooklyn-hyperledger/master/chaincode-request-templates/invoke-query-template.json
            sed -i "s/METHOD/invoke/g" body-${timestamp}.json
            sed -i "s/NAME/${name}/g" body-${timestamp}.json
            sed -i "s/FUNCTION/${function}/g" body-${timestamp}.json
            sed -i "s/ARGUMENTS/${args}/g" body-${timestamp}.json
            sed -i "s/TRANSACTION_ID/${timestamp}/g" body-${timestamp}.json

            curl -H "Content-Type: application/json" -X POST -d @body-${timestamp}.json ${rest_endpoint}

          parameters:
            name:
              description: "The chaincode container name (hash)"

            function:
              description: "The function to run"
              defaultValue: "invoke"

            args:
              description: "Arguments for the function"

      - type: org.apache.brooklyn.core.effector.ssh.SshCommandEffector
        brooklyn.config:
          name: Query Chaincode
          description: Queries an example chaincode

          command: |
            timestamp=$(date +%s)
            rest_endpoint=http://$(cat host-address):5000/chaincode

            curl -so body-${timestamp}.json https://raw.githubusercontent.com/cloudsoft/brooklyn-hyperledger/master/chaincode-request-templates/invoke-query-template.json
            sed -i "s/METHOD/query/g" body-${timestamp}.json
            sed -i "s/NAME/${name}/g" body-${timestamp}.json
            sed -i "s/FUNCTION/${function}/g" body-${timestamp}.json
            sed -i "s/ARGUMENTS/${args}/g" body-${timestamp}.json
            sed -i "s/TRANSACTION_ID/${timestamp}/g" body-${timestamp}.json

            curl -H "Content-Type: application/json" -X POST -d @body-${timestamp}.json ${rest_endpoint}

          parameters:
            name:
              description: "The chaincode container name (hash)"

            function:
              description: "The function to run"
              defaultValue: "query"

            args:
              description: "Arguments for the function"

  - id: hyperledger-validating-peer-host
    description: A Docker host running a Hyperledger Fabric validating peer node in a container
    itemType: entity
    item:

      name: Validating Peer Docker Host
      type: docker-engine

      brooklyn.children:
      - type: hyperledger-validating-peer-node
        id: my-hyperledger-validating-peer-node

  - id: hyperledger-cluster
    description: A cluster of Hyperledger Fabric validating peer nodes
    name: Hyperledger Fabric Cluster
    iconUrl: https://raw.githubusercontent.com/cloudsoft/brooklyn-hyperledger/master/hyperledger-fabric-icon.png
    item:
      type: org.apache.brooklyn.entity.group.DynamicCluster

      brooklyn.config:
        initialSize: 4

      firstMemberSpec:
        $brooklyn:entitySpec:
          id: root-node
          type: hyperledger-validating-peer-host
          name: Validating Peer Docker Host (root)

          brooklyn.config:
            is.root.node: true

            hyperledger.peer.id: vp0
            hyperledger.cluster.size: $brooklyn:config("cluster.initial.size")
            hyperledger.root.node.address: $brooklyn:component("root-node").attributeWhenReady("host.address")

      memberSpec:
        $brooklyn:entitySpec:
          type: hyperledger-validating-peer-host
          name: Validating Peer Docker Host

          brooklyn.config:
            is.root.node: false

            hyperledger.peer.id: $brooklyn:formatString("vp%s", $brooklyn:config("cluster.member.id"))
            hyperledger.cluster.size: $brooklyn:config("cluster.initial.size")
            hyperledger.root.node.address: $brooklyn:component("root-node").attributeWhenReady("host.address")

            launch.latch: $brooklyn:component("root-node").attributeWhenReady("service.isUp")

      brooklyn.enrichers:
      - type: org.apache.brooklyn.enricher.stock.Aggregator
        brooklyn.config:
          uniqueTag: node-address-aggregator
          enricher.aggregator.excludeBlank: true
          enricher.aggregating.fromMembers: true
          enricher.sourceSensor: $brooklyn:sensor("host.address")
          enricher.targetSensor: $brooklyn:sensor("node.host.address.list")

  - id: hyperledger-fabric-cluster
    description: A cluster of Hyperledger Fabric validating peer nodes
    name: Hyperledger Fabric Cluster
    iconUrl: https://raw.githubusercontent.com/cloudsoft/brooklyn-hyperledger/master/hyperledger-fabric-icon.png
    itemType: template
    item:
      services:
      - type: hyperledger-cluster
        name: Hyperledger Fabric Cluster
