brooklyn.catalog:
  version: 0.1.0_SNAPSHOT

  items:
  - id: docker-engine
    description: The engine for running Docker containers
    itemType: entity
    item:

      name: Docker Engine (host)
      type: org.apache.brooklyn.entity.software.base.VanillaSoftwareProcess

      install.command: |
        sudo yum -y update
        sudo tee /etc/yum.repos.d/docker.repo <<-'EOF'
        [dockerrepo]
        name=Docker Repository
        baseurl=https://yum.dockerproject.org/repo/main/centos/$releasever/
        enabled=1
        gpgcheck=1
        gpgkey=https://yum.dockerproject.org/gpg
        EOF
        sudo yum -y install docker-engine

      post.install.command: |
        #Disable firewall
        sudo systemctl disable firewalld

        # Configure Docker
        sudo mkdir /etc/systemd/system/docker.service.d
        echo "[Service]" | sudo tee --append /etc/systemd/system/docker.service.d/docker.conf > /dev/null
        echo "ExecStart=" | sudo tee --append /etc/systemd/system/docker.service.d/docker.conf > /dev/null
        echo 'ExecStart=/usr/bin/docker daemon -D --api-cors-header="*" -H tcp://0.0.0.0:4243 -H unix:///var/run/docker.sock' | sudo tee --append /etc/systemd/system/docker.service.d/docker.conf > /dev/null
        sudo systemctl daemon-reload

      launch.command: |
        sudo service docker start

      stop.command: |
        sudo service docker stop

      checkRunning.command: |
        sudo service docker status

      provisioning.properties:
        osFamily: centos
        minRam: 4gb
        installDevUrandom: true
        loginUser: centos

      childStartMode: foreground_late

  - id: hyperledger-peer
    description: A Hyperledger Fabric peer running in a Docker container
    itemType: entity
    item:

      type: org.apache.brooklyn.entity.software.base.VanillaSoftwareProcess
      name: Hyperledger Peer Docker Container

      shell.env:
        IS_ROOT_NODE: $brooklyn:config("is.root.node")
        HYPERLEDGER_PEER_ID: $brooklyn:config("hyperledger.peer.id")
        HYPERLEDGER_CLUSTER_SIZE: $brooklyn:config("hyperledger.cluster.size")
        HYPERLEDGER_ROOT_NODE_ADDRESS: $brooklyn:config("hyperledger.root.node.address")
        HOST_ADDRESS: $brooklyn:attributeWhenReady("host.address")

      launch.command:  |
        sudo docker pull mikezaccardo/hyperledger:latest
        sudo docker tag mikezaccardo/hyperledger:latest hyperledger/fabric-baseimage:latest
        sudo docker pull mikezaccardo/hyperledger-peer:latest
        sudo docker pull mikezaccardo/hyperledger-peer:noops
        sudo docker pull mikezaccardo/hyperledger-peer:pbft

        if [ $IS_ROOT_NODE == "true" ]
        then
            nohup sudo docker run --name=$HYPERLEDGER_PEER_ID \
                --restart=unless-stopped \
                -i \
                -p 5000:5000 \
                -p 30303:30303 \
                -p 30304:30304 \
                -p 31315:31315 \
                -e CORE_VM_ENDPOINT=http://$HOST_ADDRESS:4243 \
                -e CORE_PEER_ID=$HYPERLEDGER_PEER_ID \
                -e CORE_PEER_ADDRESS=$HOST_ADDRESS:30303 \
                -e CORE_PEER_ADDRESSAUTODETECT=false \
                -e CORE_PEER_NETWORKID=dev \
                -e CORE_LOGGING_LEVEL=debug \
                -e CORE_PEER_VALIDATOR_CONSENSUS_PLUGIN=noops \
                -e CORE_NOOPS_BLOCK_TIMEOUT=10s \
                mikezaccardo/hyperledger-peer:noops peer node start > ~/$HYPERLEDGER_PEER_ID.log 2>&1&
        else
            nohup sudo docker run --name=$HYPERLEDGER_PEER_ID \
                --restart=unless-stopped \
                -i \
                -p 30303:30303 \
                -p 30304:30304 \
                -p 31315:31315 \
                -e CORE_VM_ENDPOINT=http://$HOST_ADDRESS:4243 \
                -e CORE_PEER_ID=$HYPERLEDGER_PEER_ID \
                -e CORE_PEER_DISCOVERY_ROOTNODE=$HYPERLEDGER_ROOT_NODE_ADDRESS:30303 \
                -e CORE_PEER_ADDRESS=$HOST_ADDRESS:30303 \
                -e CORE_PEER_ADDRESSAUTODETECT=false \
                -e CORE_PEER_NETWORKID=dev \
                -e CORE_LOGGING_LEVEL=debug \
                -e CORE_PEER_VALIDATOR_CONSENSUS_PLUGIN=noops \
                -e CORE_NOOPS_BLOCK_TIMEOUT=10s \
                mikezaccardo/hyperledger-peer:noops peer node start > ~/$HYPERLEDGER_PEER_ID.log 2>&1&
        fi

      checkRunning.command: |
        # TODO actually query peer's status using `peer status` in container
        sudo docker inspect -f {{.State.Running}} $HYPERLEDGER_PEER_ID

  - id: hyperledger-node
    description: A Docker host running a Hyperledger Fabric peer node in a Docker container
    itemType: entity
    item:

      name: Hyperledger Peer Docker Host
      type: docker-engine

      brooklyn.children:
      - type: hyperledger-peer
        id: my-hyperledger-peer
        name: Hyperledger Peer Node

  - id: hyperledger-cluster
    name: Hyperledger Fabric Validating Nodes
    item:
      type: org.apache.brooklyn.entity.group.DynamicCluster

      brooklyn.config:
        initialSize: 4
        minRam: 4gb
        installDevUrandom: true

      firstMemberSpec:
        $brooklyn:entitySpec:
          id: first-hyperledger-node
          type: hyperledger-node
          name: Hyperledger Root Node

          brooklyn.config:
            is.root.node: true
            hyperledger.peer.id: vp0
            hyperledger.cluster.size: $brooklyn:config("cluster.initial.size")
            hyperledger.root.node.address: $brooklyn:attributeWhenReady("host.address")

      memberSpec:
        $brooklyn:entitySpec:
          type: hyperledger-node
          name: Hyperledger Peer Node

          brooklyn.config:
            is.root.node: false
            hyperledger.peer.id: $brooklyn:formatString("vp%s", $brooklyn:config("cluster.member.id"))
            hyperledger.cluster.size: $brooklyn:config("cluster.initial.size")
            hyperledger.root.node.address: $brooklyn:component("first-hyperledger-node").attributeWhenReady("host.address")

            launch.latch: $brooklyn:component("first-hyperledger-node").attributeWhenReady("service.isUp")
