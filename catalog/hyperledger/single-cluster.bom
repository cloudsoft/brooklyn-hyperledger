brooklyn.catalog:
  version: 0.19.0-SNAPSHOT # BROOKLYN_HYPERLEDGER_VERSION

  publish:
    description: |
      Entities for a Hyperledger Fabric cluster.
    license_code: APACHE-2.0
    icon_url: classpath://io.brooklyn.hyperledger:icon/hyperledger-fabric.png

  items:
    - id: hyperledger-fabric-single-cluster-application
      name: "hyperledger-fabric-cluster"
      iconUrl: classpath://io.brooklyn.hyperledger:icon/hyperledger-fabric.png
      itemType: entity
      item:
        type: org.apache.brooklyn.entity.stock.BasicApplication

        brooklyn.parameters:
          - name: hyperledger.num.peers
            description: "Peers"
            type: integer
            default: 2
            constraints:
              - required

        brooklyn.children:
          - type: hyperledger-ca-host
            name: "hyperledger-ca-host"
            id: my-hyperledger-ca-host
          - type: hyperledger-orderer-host
            name: "hyperledger-orderer-host"
            id: my-hyperledger-orderer-host
          - type: hyperledger-peer-cluster
            name: "hyperledger-peer-cluster"
            id: my-hyperledger-peer-cluster
          - type: hyperledger-cli-host
            name: "hyperledger-cli-host"
            id: my-hyperledger-cli-host

    - id: hyperledger-fabric-development-cluster-application
      name: "hyperledger-fabric-development-cluster"
      description: |
        Hyperledger Fabric development cluster. Deploys all components on
        one VM running Docker, and the CA service on another.
      iconUrl: classpath://io.brooklyn.hyperledger:icon/hyperledger-fabric.png
      itemType: entity
      item:
        type: org.apache.brooklyn.entity.stock.BasicApplication

        brooklyn.parameters:
          - name: hyperledger.num.peers
            description: "Peers"
            type: integer
            default: 2
            constraints:
              - required

        brooklyn.children:
          - type: hyperledger-ca-host
            name: "hyperledger-ca-host"
            id: my-hyperledger-ca-host
          - type: hyperledger-docker-engine
            name: "hyperledger-docker-engine"
            brooklyn.children:
              - type: hyperledger-orderer-node
                name: "hyperledger-orderer-node"
                id: my-hyperledger-orderer-node
              - type: hyperledger-peer-cluster
                name: "hyperledger-peer-cluster"
                id: my-hyperledger-peer-cluster
                brooklyn.config:
                  firstMemberSpec:
                    $brooklyn:entitySpec:
                      type: hyperledger-peer-node
                      name: "hyperledger-leader-node"
                      id: my-hyperledger-leader-node
                  memberSpec:
                    $brooklyn:entitySpec:
                      type: hyperledger-peer-node
                      name: "hyperledger-peer-node"
                      brooklyn.config:
                        is.leader.node: false
                        latch.launch: $brooklyn:component("my-hyperledger-leader-node").attributeWhenReady("service.isUp")
              - type: hyperledger-cli-node
                name: "hyperledger-cli-node"
                id: my-hyperledger-cli-node

    - id: hyperledger-ca-host
      itemType: entity
      item:
        type: hyperledger-docker-engine
        name: "hyperledger-ca-host"

        brooklyn.children:
          - type: hyperledger-ca-node
            id: my-hyperledger-ca-node

    - id: hyperledger-ca-node
      itemType: entity
      item:
        type: hyperledger-docker-container
        name: "hyperledger-ca-node"

        brooklyn.config:
          container.name: "fabric-ca"

          launch.command: |
            sudo docker run \
                --name=${CONTAINER_NAME} \
                --restart=always \
                -d \
                -p 8888:8888 \
                hyperledger/fabric-ca:${HYPERLEDGER_VERSION} fabric-ca-server start -b admin:adminpw

    - id: hyperledger-orderer-host
      itemType: entity
      item:
        type: hyperledger-docker-engine
        name: "hyperledger-orderer-host"

        brooklyn.children:
          - type: hyperledger-orderer-node
            id: my-hyperledger-orderer-node

    - id: hyperledger-orderer-node
      itemType: entity
      item:
        type: hyperledger-docker-container
        name: "hyperledger-orderer-node"

        brooklyn.config:
          container.name: "fabric-orderer"

          launch.command: |
            sudo docker run \
                --name=${CONTAINER_NAME} \
                --restart=always \
                -d \
                -e ORDERER_GENERAL_LEDGERTYPE=ram \
                -e ORDERER_GENERAL_BATCHTIMEOUT=10s \
                -e ORDERER_GENERAL_MAXMESSAGECOUNT=10 \
                -e ORDERER_GENERAL_MAXWINDOWSIZE=1000 \
                -e ORDERER_GENERAL_LISTENADDRESS=0.0.0.0 \
                -e ORDERER_GENERAL_LISTENPORT=7050 \
                -e ORDERER_RAMLEDGER_HISTORY_SIZE=100 \
                -e CONFIGTX_ORDERER_ORDERERTYPE=solo \
                -p 29050:7050 \
                hyperledger/fabric-orderer:${HYPERLEDGER_VERSION} orderer

    - id: hyperledger-peer-cluster
      name: "hyperledger-peer-cluster"
      iconUrl: classpath://io.brooklyn.hyperledger:icon/hyperledger-fabric.png
      item:
        type: org.apache.brooklyn.entity.group.DynamicCluster

        brooklyn.config:
          initialSize: $brooklyn:config("hyperledger.num.peers")

          firstMemberSpec:
            $brooklyn:entitySpec:
              type: hyperledger-peer-host
              name: "hyperledger-leader-host"
              id: my-hyperledger-leader-host

              brooklyn.config:
                is.leader.node: true
                latch.launch: $brooklyn:component("my-hyperledger-orderer-node").attributeWhenReady("service.isUp")
                post.launch.command: |
                  sudo docker pull hyperledger/fabric-ccenv:${HYPERLEDGER_VERSION}

          memberSpec:
            $brooklyn:entitySpec:
              type: hyperledger-peer-host
              name: "hyperledger-peer-host"

              brooklyn.config:
                is.leader.node: false
                latch.launch: $brooklyn:component("my-hyperledger-leader-node").attributeWhenReady("service.isUp")

    - id: hyperledger-peer-host
      itemType: entity
      item:
        type: hyperledger-docker-engine
        name: "hyperledger-peer-host"

        brooklyn.children:
          - type: hyperledger-peer-node
            id: my-hyperledger-peer-node

    - id: hyperledger-peer-node
      itemType: entity
      item:
        type: hyperledger-docker-container
        name: "hyperledger-peer-node"

        brooklyn.config:
          container.name: "fabric-peer"

          shell.env:
            IS_LEADER_NODE: $brooklyn:config("is.leader.node")
            HOST_ADDRESS: $brooklyn:attributeWhenReady("host.address")
            ORDERER_ADDRESS: $brooklyn:component("my-hyperledger-orderer-node").attributeWhenReady("host.address")
            PEER_ADDRESS: $brooklyn:component("my-hyperledger-peer-cluster").attributeWhenReady("cluster.first.entity").attributeWhenReady("host.address")
            ID: $brooklyn:config("cluster.member.id")
            CONTAINER_NAME:
              $brooklyn:formatString:
                - "%s%d"
                - $brooklyn:config("container.name")
                - $brooklyn:config("cluster.member.id")

          launch.command: |
            MIN_PORT="2$((${ID} + 70))50"
            PEER_PORT="2$((${ID} + 70))51"
            MAX_PORT="2$((${ID} + 70))59"
            sudo docker run \
                --name=${CONTAINER_NAME} \
                --restart=always \
                -d \
                -e CORE_VM_ENDPOINT=http://${HOST_ADDRESS}:${DOCKER_PORT} \
                -e CORE_PEER_ADDRESSAUTODETECT=false \
                -e CORE_LOGGING_LEVEL=DEBUG \
                -e CORE_NEXT=true \
                -e CORE_PEER_ENDORSER_ENABLED=true \
                -e CORE_PEER_COMMITTER_ENABLED=true \
                -e CORE_PEER_PROFILE_ENABLED=false \
                -e CORE_PEER_GOSSIP_ORGLEADER=${IS_LEADER_NODE} \
                -e CORE_PEER_GOSSIP_USELEADERELECTION=false \
                -e CORE_PEER_GOSSIP_IGNORESECURITY=true \
                -e CORE_PEER_GOSSIP_SKIPHANDSHAKE=true \
                -e CORE_PEER_ID=peer${ID} \
                -e CORE_PEER_ADDRESS=${HOST_ADDRESS}:${PEER_PORT} \
                -e CORE_PEER_COMMITTER_LEDGER_ORDERER=${ORDERER_ADDRESS}:29050 \
                -e CORE_PEER_GOSSIP_BOOTSTRAP=${PEER_ADDRESS}:27051 \
                -e CORE_PEER_GOSSIP_EXTERNALENDPOINT=${HOST_ADDRESS}:${PEER_PORT} \
                -e CORE_PEER_GOSSIP_USELEADERELECTION=false \
                -p ${MIN_PORT}-${MAX_PORT}:7050-7059 \
                hyperledger/fabric-peer:${HYPERLEDGER_VERSION} peer node start -o ${ORDERER_ADDRESS}:29050

    - id: hyperledger-cli-host
      itemType: entity
      item:
        type: hyperledger-docker-engine
        name: "hyperledger-cli-host"

        brooklyn.children:
          - type: hyperledger-cli-node
            id: my-hyperledger-cli-node

    - id: hyperledger-cli-node
      itemType: entity
      item:
        type: hyperledger-docker-container
        name: "hyperledger-cli-node"

        brooklyn.config:
          latch.start: $brooklyn:component("my-hyperledger-peer-cluster").attributeWhenReady("service.isUp")

          shell.env:
            HOST_ADDRESS: $brooklyn:attributeWhenReady("host.address")
            PEER_ADDRESS: $brooklyn:component("my-hyperledger-peer-cluster").attributeWhenReady("cluster.first.entity").attributeWhenReady("host.address")

          container.name: "fabric-cli"

          launch.command: |
            sudo docker run \
                --name=${CONTAINER_NAME} \
                --restart=always \
                -d \
                -e CORE_VM_ENDPOINT=http://${HOST_ADDRESS}:${DOCKER_PORT} \
                -e CORE_PEER_ADDRESSAUTODETECT=false \
                -e CORE_LOGGING_LEVEL=DEBUG \
                -e CORE_NEXT=true \
                -e CORE_PEER_ENDORSER_ENABLED=true \
                -e CORE_PEER_COMMITTER_ENABLED=true \
                -e CORE_PEER_PROFILE_ENABLED=false \
                -e CORE_PEER_GOSSIP_ORGLEADER=false \
                -e CORE_PEER_GOSSIP_USELEADERELECTION=false \
                -e CORE_PEER_GOSSIP_IGNORESECURITY=true \
                -e CORE_PEER_GOSSIP_SKIPHANDSHAKE=true \
                -e CORE_PEER_ID=cli \
                -e CORE_PEER_ADDRESS=${PEER_ADDRESS}:27051 \
                -e GOPATH=/opt/golang \
                -p 28050-28059:7050-7059 \
                hyperledger/fabric-peer:${HYPERLEDGER_VERSION} bash -c 'while true; do sleep 20170504; done'

          post.launch.command: |
            sudo docker exec fabric-cli bash -c \
              'apt-get -y update && apt-get -y install golang git && mkdir /opt/golang'
